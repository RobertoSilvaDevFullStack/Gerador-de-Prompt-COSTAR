#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üéØ Gerador de Prompt COSTAR - Aplica√ß√£o Principal
Ponto de entrada unificado e organizado
"""

import sys
import os
from pathlib import Path

# Adicionar diret√≥rio raiz ao Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def main():
    """Ponto de entrada principal da aplica√ß√£o"""
    print("üéØ Iniciando Gerador de Prompt COSTAR")
    print("=" * 50)
    
    # Verificar se est√° em modo desenvolvimento ou produ√ß√£o
    if os.getenv('ENVIRONMENT') == 'production':
        print("üöÄ Modo: PRODU√á√ÉO")
        try:
            # Tentar carregar aplica√ß√£o otimizada
            from app.core.application import run_production_app
            print("‚úÖ Carregando aplica√ß√£o otimizada...")
            run_production_app()
        except ImportError:
            print("‚ö†Ô∏è Core app n√£o encontrado, usando demo...")
            import uvicorn
            uvicorn.run("tools.main_demo:app", host="0.0.0.0", port=8000, reload=False)
    else:
        print("üõ†Ô∏è Modo: DESENVOLVIMENTO")
        try:
            # Carregar vers√£o de desenvolvimento
            import uvicorn
            print("‚úÖ Carregando vers√£o de desenvolvimento...")
            uvicorn.run("tools.main_demo:app", host="0.0.0.0", port=8000, reload=True)
        except ImportError as e:
            print(f"‚ùå Erro ao carregar aplica√ß√£o: {e}")
            print("üí° Verifique se todas as depend√™ncias est√£o instaladas")
            return 1
    
    return 0

if __name__ == "__main__":
    try:
        exit_code = main()
        sys.exit(exit_code)
    except KeyboardInterrupt:
        print("\nüëã Aplica√ß√£o encerrada pelo usu√°rio")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå Erro cr√≠tico: {e}")
        sys.exit(1)